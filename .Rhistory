obs_catchB <- hydraDataList$observedCatch
obs_catchB
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]]
catch<-indexfits[[2]]
catch
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size$value[which(surv_size$value == -999)] = 0.00001
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
nll_survey<-output$nll_survey_size
surv_size$nll_surv<-nll_survey
biomass
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
biomass
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
catch
View(catch)
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
View(surv_size)
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size
dim(surv_size)
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size
pred_surv<-output$pred_survey_size
pred_surv
nll_survey<-output$nll_survey_size
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size$value[which(surv_size$value == -999)] = 0.00001
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species],
filter(value != -999))
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size<- surv_size %>% filter(value != -999)
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
nll_survey<-output$nll_survey_size
surv_size$nll_surv<-nll_survey
names*surv_size
names(surv_size)
colnames(surv_size) <- c('number','year','species','type','InpN','lenbin','obs_value','label',
'pred_value','nll')
surv_size
catch_size <- hydraDataList$observedCatchSize %>% tibble()
catch_size<-catch_size %>% pivot_longer(cols=7:ncol(.), names_to = "lenbin") %>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("catch",nrow(.)),
species = hydraDataList$speciesList[species])# %>% filter(value != -999)
catch_size<- catch_size %>% filter(value != -999)
pred_catch<-output$pred_catch_size
catch_size$pred_catch<-pred_catch
nll_catch<-output$nll_catch_size
catch_size$nll_catch<-nll_catch
colnames(catch_size) <- c('number','area','year','species','type','InpN','lenbin','obs_value','label',
'pred_value','nll')
catch_size
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.))) %>%
I()
pred_diet<-output$pred_dietprop
if (length(pred_diet)!=nrow(diet_comp)) diet_comp <- diet_comp %>% filter(value != 0)
diet_comp$pred_diet<-pred_diet
nll_diet<-output$nll_dietprop
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.))) %>%
I()
pred_diet<-output$pred_dietprop
diet_comp$pred_diet<-pred_diet
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.))) %>%
I()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.))) %>%
diet_comp<- diet_comp %>% filter(value != -999)
diet_comp$pred_diet<-pred_diet
nll_diet<-output$nll_dietprop
diet_comp$nll_diet<-nll_diet
diet_comp$pearson<-((diet_comp$value-diet_comp$pred_diet)/sqrt(diet_comp$pred_diet))
nll_diet
dim(nll_diet)
length(nll_diet)
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.)))
diet_comp<- diet_comp  %>% filter(value != -999)
pred_diet<-output$pred_dietprop
diet_comp$pred_diet<-pred_diet
pred_diet<-output$pred_dietprop
if (length(pred_diet)!=nrow(diet_comp)) diet_comp <- diet_comp %>% filter(value != 0)
diet_comp$pred_diet<-pred_diet
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.)))
diet_comp<- diet_comp  %>% filter(value != -999)
pred_diet<-output$pred_dietprop
if (length(pred_diet)!=nrow(diet_comp)) diet_comp <- diet_comp %>% filter(value != 0)
diet_comp$pred_diet<-pred_diet
nll_diet<-output$nll_dietprop
diet_comp$nll_diet<-nll_diet
diet_comp$pearson<-((diet_comp$value-diet_comp$pred_diet)/sqrt(diet_comp$pred_diet))
colnames(diet_comp) <- c('number','year','species','lenbin','InpN','prey','obs_value','label', 'pred_value','nll')
#catch
catchsample <- catch_size %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, area, year, species, type) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
catchsample
View(catch_size)
catch_size$EffN<-catchsample
#survey
survsample <- surv_size %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, year, species, type) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
survsample
View(catchsample)
#diet comp
dietsample <- diet_comp %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, year, species, lenbin) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
View(diet_comp)
diet_comp <- hydraDataList$observedSurvDiet %>% tibble()
diet_comp<-diet_comp %>% pivot_longer(cols=6:ncol(.), names_to = "prey") %>%
mutate(#lenbin = as.integer(str_remove(lenbin, "V")),
species = hydraDataList$speciesList[species],
label = rep("diet",nrow(.)))
diet_comp<- diet_comp  %>% filter(value != -999)
pred_diet<-output$pred_dietprop
if (length(pred_diet)!=nrow(diet_comp)) diet_comp <- diet_comp %>% filter(value != 0)
diet_comp$pred_diet<-pred_diet
nll_diet<-output$nll_dietprop
diet_comp$nll_diet<-nll_diet
diet_comp
View(diet_comp)
colnames(diet_comp) <- c('number','year','species','lenbin','InpN','prey','obs_value','label', 'pred_value','nll')
View(diet_comp)
#catch
catchsample <- catch_size %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, area, year, species, type) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
catchsample
#survey
survsample <- surv_size %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, year, species, type) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
survsample
#diet comp
dietsample <- diet_comp %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, year, species, lenbin) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
dietsample
##### CATCH and SURVEY BIOMASS ######
set.seed(seed = 23)
temp_catch<-catch %>% filter(species == "3" )
yr<-1
year<-unique(catch$year)
catch_sim <- NULL
for (yr in year) {
catch_sim[[yr]] <-  rnorm(100, catch$pred_catch, catch$cv)
}
survey_sim<-rnorm(100, biomass$pred_bio, biomass$cv)
survey_sim
year<-unique(catch$year)
catch_sim <- NULL
for (yr in year) {
catch_sim[[yr]] <-  rnorm(100, catch$pred_catch, catch$cv)
}
survey_sim<-rnorm(100, biomass$pred_bio, biomass$cv)
survey_sim
biomass$pred_bio
biomass$cv
temp_catch<-catch
yr<-1
year<-unique(catch$year)
catch_sim <- NULL
for (yr in year) {
catch_sim[[yr]] <-  rnorm(100, catch$pred_catch, catch$cv)
}
survey_sim<-rnorm(100, biomass$pred_bio, biomass$cv)
survey_sim
catch_sim
yr<-1
year<-unique(catch$year)
catch_sim <- NULL
for (yr in year) {
catch_sim[[yr]] <-  rnorm(100, catch$pred_catch, catch$cv)
}
catch_sim
View(catch_sim)
year
temp_catch<-catch_size
year<-unique(catch_size$year)
year<-unique(catch_size$year)
catch_sim <- NULL
for (yr in year) {
catch_sim[[yr]] <-  rnorm(100, catch_size$pred_catch, catch_size$cv)
}
View(catch_size)
catch_size <- hydraDataList$observedCatchSize %>% tibble()
catch_size<-catch_size %>% pivot_longer(cols=7:ncol(.), names_to = "lenbin") %>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("catch",nrow(.)),
species = hydraDataList$speciesList[species])# %>% filter(value != -999)
catch_size<- catch_size %>% filter(value != -999)
pred_catch<-output$pred_catch_size
pred_catch
output<-reptoRlist(repfile)
source("R/read.report.R")
source("R/gettables.R")
library(tidyverse)
hydraDataList<-readRDS("test-data/hydraDataList_GB5bin.rds")
repfile <- c("test-data/hydra_sim.rep")
output<-reptoRlist(repfile)
output
View(output)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
repfile
indexfits <- gettables(repfile, biorows, catchrows)
View(indexfits)
indexfits[[1]]
indexfits[[2]]
source("R/read.report.R")
source("R/gettables.R")
library(tidyverse)
hydraDataList<-readRDS("test-data/hydraDataList_GB5bin.rds")
repfile <- c("test-data/hydra_sim.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
View(obs_surveyB)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
biomass
hydraDataList$speciesList
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])%>%
filter(species == "Atlantic_mackerel"|"Spiny_dogfish"|"Atlantic_herring"|"Atlantic_cod" )
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
biomass<- biomass %>% filter(species == "Atlantic_mackerel"|"Spiny_dogfish"|"Atlantic_herring"|"Atlantic_cod" )
biomass<- biomass %>% filter(species = "Atlantic_mackerel"|"Spiny_dogfish"|"Atlantic_herring"|"Atlantic_cod" )
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
biomass<- biomass$species %>% filter("Atlantic_mackerel"|"Spiny_dogfish"|"Atlantic_herring"|"Atlantic_cod" )
biomass<- biomass %>% filter(species="Atlantic_mackerel"|"Spiny_dogfish"|"Atlantic_herring"|"Atlantic_cod" )
biomass<- biomass %>% filter(species=="Atlantic_mackerel"|"Spiny_dogfish"|"Atlantic_herring"|"Atlantic_cod" )
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
biomass
biomass<- biomass$species %<% filter("Spiny_dogfish")
biomass<- biomass$species %>% filter("Spiny_dogfish")
View(biomass)
biomass$species
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
biomass$species[Spiny_dogfish]
biomass$species["Spiny_dogfish"]
View(biomass)
source("R/read.report.R")
source("R/gettables.R")
library(tidyverse)
#read new 4 species 5 bins data
hydraDataList <- readRDS("inputs/hydra_sim_GBself_5bin.rds")
setwd("C:/Users/macristina.perez/Documents/UMassD/Classes/2022/fall_2022/EBFM/project")
#read new 4 species 5 bins data
hydraDataList <- readRDS("inputs/hydra_sim_GBself_5bin.rds")
View(hydraDataList_GB5bin)
hydraDataList_GB5bin[["speciesList"]]
repfile <- c("inputs/hydra_sim.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
biorows <- dim(obs_surveyB)[1]
obs_catchB <- hydraDataList$observedCatch
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]]
catch<-indexfits[[2]]
obs_survey <- hydraDataList$observedSurvSize %>% tibble()
obs_survey <- obs_survey %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
obs_survey$value[which(obs_survey$value == -999)] = 0.00001
pred_surv<-output$pred_survey_size
obs_survey$pred_surv<-pred_surv
nll_survey<-output$nll_survey_size
colnames(obs_survey) <- c('number','year','species','type','InpN','lenbin','obs_value','label',
'pred_value','nll','pearson')
obs_catch <- hydraDataList$observedCatchSize %>% tibble()
obs_catch<-obs_catch %>% pivot_longer(cols=7:ncol(.), names_to = "lenbin") %>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("catch",nrow(.)),
species = hydraDataList$speciesList[species])# %>% filter(value != -999)
obs_catch$value[which(obs_catch$value == -999)] = 0.00001
pred_catch<-output$pred_catch_size
obs_catch$pred_catch<-pred_catch
nll_catch<-output$nll_catch_size
obs_catch <- hydraDataList$observedCatchSize %>% tibble()
obs_catch<-obs_catch %>% pivot_longer(cols=7:ncol(.), names_to = "lenbin") %>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("catch",nrow(.)),
species = hydraDataList$speciesList[species]) %>% filter(value != -999)
pred_catch<-output$pred_catch_size
obs_catch$pred_catch<-pred_catch
source("R/read.report.R")
source("R/gettables.R")
library(tidyverse)
hydraDataList<-readRDS("test-data/hydraDataList_GB5bin.rds")
setwd("C:/Users/macristina.perez/Documents/UMassD/Classes/2022/fall_2022/EBFM/project/project2")
hydraDataList<-readRDS("test-data/hydraDataList_GB5bin.rds")
repfile <- c("test-data/hydra_sim.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size<- surv_size %>% filter(value != -999)
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
#surv_size<- surv_size %>% filter(value != -999)
surv_size$value[which(surv_size$value == -999)] = 0.00001
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
hydraDataList<-readRDS("test-data/hydraDataList_GB5bin.rds")
repfile <- c("test-data/hydra_sim.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
#surv_size<- surv_size %>% filter(value != -999)
surv_size$value[which(surv_size$value == -999)] = 0.00001
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
hydraDataList<-readRDS("test-data/hydraDataList_GB5bin.rds")
repfile <- c("test-data/hydra_sim.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size<- surv_size %>% filter(value != -999)
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
surv_size<- surv_size %>% filter(value != -999)
View(surv_size)
surv_size <- hydraDataList$observedSurvSize %>% tibble()
surv_size <- surv_size %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
View(surv_size)
pred_surv<-output$pred_survey_size
surv_size$pred_surv<-pred_surv
source("R/read.report.R")
source("R/gettables.R")
library(tidyverse)
hydraDataList_5bin <- readRDS("C:/Users/macristina.perez/Documents/GitHub/hydra_sim/inputRdatalists/hydraDataList_5bin.rds")
hydraDataList<-hydraDataList_5bin
repfile <- c("test-data/hydra_sim.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
View(biomass)
