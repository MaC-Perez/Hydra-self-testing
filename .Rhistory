I()
est_bio<- est_bio %>%
rename(n_sim = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
nmodel <- length(repfiles)
est_bio <- est_bio %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(bio = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_bio = ifelse(bio>0,log(bio),NA)) %>%
#model = as.factor(model)) %>%
I()
source("R/read.report.R")
source("R/gettables.R")
library(ggforce)
library(tidyverse)
hydraDataList <- readRDS("C:/Users/macristina.perez/Documents/GitHub/Hydra-self-testing/inputs/hydra_sim_GBself_5bin.rds")
repfiles <- c("simulated data/sim1/hydra_sim.rep","simulated data/sim2/hydra_sim.rep",
"simulated data/sim3/hydra_sim.rep","simulated data/sim4/hydra_sim.rep" ,"simulated data/sim5/hydra_sim.rep",
"simulated data/sim6/hydra_sim.rep", "simulated data/sim7/hydra_sim.rep" ,"simulated data/sim8/hydra_sim.rep",
"simulated data/sim9/hydra_sim.rep", "simulated data/sim10/hydra_sim.rep" ,"simulated data/sim11/hydra_sim.rep",
"simulated data/sim12/hydra_sim.rep", "simulated data/sim13/hydra_sim.rep" ,"simulated data/sim14/hydra_sim.rep",
"simulated data/sim15/hydra_sim.rep", "simulated data/sim16/hydra_sim.rep" ,"simulated data/sim17/hydra_sim.rep",
"simulated data/sim18/hydra_sim.rep", "simulated data/sim19/hydra_sim.rep" ,"simulated data/sim20/hydra_sim.rep",
"simulated data/sim21/hydra_sim.rep", "simulated data/sim22/hydra_sim.rep" ,"simulated data/sim23/hydra_sim.rep",
"simulated data/sim24/hydra_sim.rep", "simulated data/sim25/hydra_sim.rep" ,"simulated data/sim26/hydra_sim.rep",
"simulated data/sim27/hydra_sim.rep", "simulated data/sim28/hydra_sim.rep" ,"simulated data/sim29/hydra_sim.rep",
"simulated data/sim30/hydra_sim.rep")
output<-purrr::map(repfiles, reptoRlist)
est_bio <- map(output, "EstBsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_bio<- est_bio %>%
rename(n_sim = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
nmodel <- length(repfiles)
est_bio <- est_bio %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(bio = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_bio = ifelse(bio>0,log(bio),NA)) %>%
#model = as.factor(model)) %>%
I()
write.csv(est_bio, file = "est_bio.csv", row.names = T)
output<-purrr::map(repfiles, reptoRlist)
est_bio <- map(output, "EstBsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_bio<- est_bio %>%
rename(n_sim = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
nmodel <- length(repfiles)
est_bio <- est_bio %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(bio = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_bio = ifelse(bio>0,log(bio),NA)) %>%
#model = as.factor(model)) %>%
I()
est_bio %>%
ggplot() +
aes(x = year, y = bio, col = n_sim) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated biomass")
est_bio %>%
ggplot() +
aes(x = year, y = log_bio, col = n_sim) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated LN(biomass)")
catch_obspred<-indexfits[2][[1]]%>%
mutate(obs = catch + 1e-07,
pred = pred_catch + 1e-07,
log_obs = log(obs),
log_pred = log(pred),
log_lo = log_obs - 1.96*cv,
log_hi = log_obs + 1.96*cv,
obs_lo = exp(log_lo),
obs_hi = exp(log_hi),
species = hydraDataList$speciesList[species])
p1 <- catch_obspred %>%
filter(fishery == 1) %>%
ggplot() +
aes(x= year, y = obs, group = species, col=factor(fishery)) +
geom_errorbar(aes(ymin = obs_lo, ymax = obs_hi)) +
geom_point() +
geom_line(aes(x=year, y=pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- catch_obspred %>%
filter(fishery == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(fishery)) +
geom_errorbar(aes(ymin = log_lo, ymax = log_hi)) +
geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_line(aes(ymin = log_lo, ymax = log_hi)) +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_line(aes(ymin = log_lo)) +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_line(aes(ymin = log_lo)) +
geom_line(aes(ymax = log_hi)) +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_line(aes(log_lo)) +
geom_line(aes(log_hi)) +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_line(aes(x= year, y=log_lo)) +
geom_line(aes(x= year, y=log_hi)) +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_line(aes(x= year, y=log_lo), col = "black") +
geom_line(aes(x= year, y=log_hi), col = "black") +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
p1 <- survey_obspred %>%
filter(survey == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_errorbar(aes(ymin = log_lo, ymax = log_hi)) +
#geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
est_F<- est_F %>%
rename(model = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
est_F <- map(output, "EstFsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_F<- est_F %>%
rename(model = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
est_F
est_F<- est_F %>%
rename(model = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
est_F <- map(output, "EstFsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_F<- est_F %>%
rename(model = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
est_F
nmodel <- length(repfiles)
est_F <- est_F %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(Ftot = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_F = ifelse(Ftot>0,log(Ftot),NA)) %>%
#model = as.factor(model)) %>%
I()
est_F
est_F %>% select(sizebin1)
est_F %>% select(sizebin1) %>%
ggplot() +
aes(x = year, y = Ftot, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F <- map(output, "EstFsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_F<- est_F %>%
rename(model = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
nmodel <- length(repfiles)
est_F <- est_F %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(Ftot = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_F = ifelse(Ftot>0,log(Ftot),NA)) %>%
#model = as.factor(model)) %>%
I()
names(est_F)
est_F %>% select(model | sizebin1 | Ftot | species | year | log_F)
est_F %>% select(model | sizebin1 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = Ftot, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin1 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = Ftot, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin1 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = sizebin1, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin2 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = sizebin2, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin3 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = sizebin3, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin4 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = sizebin4, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin5 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = sizebin4, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>% select(model | sizebin5 | Ftot | species | year | log_F) %>%
ggplot() +
aes(x = year, y = sizebin5, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F <- map(output, "EstFsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_F<- est_F %>%
rename(model = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
nmodel <- length(repfiles)
est_F <- est_F %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(Ftot = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_F = ifelse(Ftot>0,log(Ftot),NA)) %>%
#model = as.factor(model)) %>%
I()
est_F %>%
ggplot() +
aes(x = year, y = Ftot, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>%
ggplot() +
aes(x = year, y = sizebin1, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
est_F %>%
ggplot() +
aes(x = year, y = sizebin2, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Ftot (t)",
title = "Time series of estimated biomass")
hydraDataList <- readRDS("C:/Users/macristina.perez/Documents/GitHub/Hydra-self-testing/inputs/hydra_sim_GBself_5bin.rds")
#load("test-data/hydraDataList.rda")
repfile <- c("test-data/hydra_sim_GBself_5bin.rep")
output<-reptoRlist(repfile)
### CATCH AND SURVEY BIOMASS ###
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
indexfits <- gettables(repfile, biorows, catchrows)
biomass<-indexfits[[1]] %>%
mutate(species = hydraDataList$speciesList[species])
catch<-indexfits[[2]]%>%
mutate(species = hydraDataList$speciesList[species])
survey_obspred <- indexfits[1][[1]] %>%
mutate(obs = biomass + 1e-07,
pred = pred_bio + 1e-07,
log_obs = log(obs),
log_pred = log(pred),
log_lo = log_obs - 1.96*cv,
log_hi = log_obs + 1.96*cv,
obs_lo = exp(log_lo),
obs_hi = exp(log_hi),
species = hydraDataList$speciesList[species])
cv_catch
pred_survey <- biomass$pred_bio
cv_survey<-biomass$cv
cv_survey
hydraDataList <- readRDS("C:/Users/macristina.perez/Documents/GitHub/Hydra-self-testing/inputs/hydra_sim_GBself_5bin.rds")
repfiles <- c("simulated data/sim1/hydra_sim.rep","simulated data/sim2/hydra_sim.rep",
"simulated data/sim3/hydra_sim.rep","simulated data/sim4/hydra_sim.rep" ,"simulated data/sim5/hydra_sim.rep",
"simulated data/sim6/hydra_sim.rep", "simulated data/sim7/hydra_sim.rep" ,"simulated data/sim8/hydra_sim.rep",
"simulated data/sim9/hydra_sim.rep", "simulated data/sim10/hydra_sim.rep" ,"simulated data/sim11/hydra_sim.rep",
"simulated data/sim12/hydra_sim.rep", "simulated data/sim13/hydra_sim.rep" ,"simulated data/sim14/hydra_sim.rep",
"simulated data/sim15/hydra_sim.rep", "simulated data/sim16/hydra_sim.rep" ,"simulated data/sim17/hydra_sim.rep",
"simulated data/sim18/hydra_sim.rep", "simulated data/sim19/hydra_sim.rep" ,"simulated data/sim20/hydra_sim.rep",
"simulated data/sim21/hydra_sim.rep", "simulated data/sim22/hydra_sim.rep" ,"simulated data/sim23/hydra_sim.rep",
"simulated data/sim24/hydra_sim.rep", "simulated data/sim25/hydra_sim.rep" ,"simulated data/sim26/hydra_sim.rep",
"simulated data/sim27/hydra_sim.rep", "simulated data/sim28/hydra_sim.rep" ,"simulated data/sim29/hydra_sim.rep",
"simulated data/sim30/hydra_sim.rep")
output<-purrr::map(repfiles, reptoRlist)
est_bio <- map(output, "EstBsize") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
est_bio<- est_bio %>%
rename(n_sim = 'model', sizebin1 = 'V1', sizebin2 = 'V2', sizebin3 = 'V3', sizebin4 = 'V4', sizebin5 = 'V5')
nmodel <- length(repfiles)
est_bio <- est_bio %>%  #output$EstBsize %>%
# rowSums() %>%
tibble() %>%
mutate(bio = rowSums(across(where(is.numeric)))) %>%
mutate(species = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel),
year  = rep(rep(1:(hydraDataList$Nyrs),4),nmodel),
#year = 0.8 + year / 5,  #5 time steps per year
log_bio = ifelse(bio>0,log(bio),NA)) %>%
#model = as.factor(model)) %>%
I()
est_bio %>%
ggplot() +
aes(x = year, y = bio, col = n_sim) +
#geom_point() +x
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated biomass")
est_bio %>%
ggplot() +
aes(x = year, y = log_bio, col = n_sim) +
geom_line() +
facet_wrap(~species, scales = "free") +
geom_line() +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated LN(biomass)")
catch_obspred<-indexfits[2][[1]]%>%
mutate(obs = catch + 1e-07,
pred = pred_catch + 1e-07,
log_obs = log(obs),
log_pred = log(pred),
log_lo = log_obs - 1.96*cv,
log_hi = log_obs + 1.96*cv,
obs_lo = exp(log_lo),
obs_hi = exp(log_hi),
species = hydraDataList$speciesList[species])
p1 <- catch_obspred %>%
filter(fishery == 1) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(fishery)) +
geom_errorbar(aes(ymin = log_lo, ymax = log_hi)) +
geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
catch_est %>%
ggplot() +
aes(x = year, y = pred_value, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species_name, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Catch (t)",
title = "Time series of estimated catch")
catch_est <- map(output, "catch") %>%
#walk(as.data.frame) %>%
map_dfr(as.data.frame, .id = "model") %>%
I()
catch_est <- catch_est %>% mutate(species_name = rep(rep(hydraDataList$speciesList, each = hydraDataList$Nyrs),nmodel)) %>%
rename(model = 'model', fishery = 'V1', area = 'V2', year = 'V3', species = 'V4', catch = 'V5', cv= 'V6', pred_value= 'V7', residual='V8', nll= 'V9')
catch_est %>%
ggplot() +
aes(x = year, y = pred_value, col = model) +
#geom_point() +x
geom_line() +
facet_wrap(~species_name, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Catch (t)",
title = "Time series of estimated catch")
