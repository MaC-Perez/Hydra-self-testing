hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
if(dim(pred_obs %>%
tibble() %>%
filter(species == sp & number == 2))[1] > 0) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 2) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
# c("1.o","1.e","",
#            "2.o","2.e","",
#            "3.o","3.e","",
#            "4.o","4.e","",
#            "5.o","5.e",""),
breaks = breaks_use, #c("1.o","1.e",NA,
# "2.o","2.e",NA,
# "3.o","3.e",NA,
# "4.o","4.e",NA,
# "5.o","5.e",NA),
labels = limits_use) + #c("1.o","1.e","",
# "2.o","2.e","",
# "3.o","3.e","",
# "4.o","4.e","",
# "5.o","5.e","")) +
coord_flip() +
facet_wrap(~as.numeric(year), dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
# facet_wrap_paginate(~ , ncol = 4, nrow = 5, page = 4)
}
if(dim(pred_obs %>%
tibble() %>%
filter(species == sp & number == 2))[1] == 0) plot_diet[[sp]] <- NULL
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
sp<-1
nsize <- hydraDataList$Nsizebins
stringbit <- paste0(rep(1:nsize, each=2),c(".o",".e"))
limits_use <- rep("",3*nsize)
breaks_use <- rep(NA,3*nsize)
for (i in 1:nsize) {
lo <- i*3-2
hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
if(dim(pred_obs %>%
tibble() %>%
filter(species == sp & number == 2))[1] > 0) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 2) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
breaks = breaks_use,
labels = limits_use) +
coord_flip() +
facet_wrap(~as.numeric(year), dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
}
if(dim(pred_obs %>%
tibble() %>%
filter(species == sp & number == 2))[1] == 0) plot_diet[[sp]] <- NULL
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
for (sp in especies){
tmp <- plot_diet[[sp]]
cat("######", sp, " \n")
print(tmp)
cat(" \n\n")
}
dietsample <- temp.diet %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, year, species, lenbin) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
#dietsample
for (surv in unique(dietsample$number)) {
cat("###### Survey #", surv, " \n")
p1 <- dietsample %>%
filter(number == surv) %>%
ggplot() +
aes(x= InpN, y = effN, group = species) +
geom_point() +
geom_abline(intercept = 0, slope = 1, col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
cat(" \n\n")
}
# read true object
omlist_ss <- readRDS(truth)
# read true object
omlist_ss <- readRDS("inputs/hydra_sim_GBself_5bin.rds")
#Number of years
nyears <- omlist_ss$runpar$nyears
total_sample <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep
# hardcode this that only Poseidon knows
# or anyone who looks at mskeyrun/data-raw/build_simdata.R
fitstart = 40
fitend = 120
#survey species inherited from omlist_ss
atlsurvspp <- omlist_ss$species_ss
# survey season and other time dimensioning parameters
# generalized timesteps all models
atlnoutsteps <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep
atltimeall <- c(0:atlnoutsteps)
est_recruits <- output$EstRec %>%
as.data.frame() %>%
mutate(species = hydraDataList$speciesList) %>%
select(species, everything()) %>%
pivot_longer(cols = -species, names_to = "year") %>%
mutate(year = as.integer(str_remove(year, "V")),
log_rec = ifelse(value > 0,log(value),NA)) %>%
I()
if(skill){
# get true recruitment
nitro <- merge(omlist_ss$biol$kwsr, omlist_ss$biol$kwrr, by = "1")
names(nitro) <- c("Code", "KWSR", "KWRR")
nitro <- nitro %>%
dplyr::group_by(Code) %>%
dplyr::mutate(Nsum = sum(KWSR, KWRR))
truerec <- omlist_ss$YOY_ss %>%
tidyr::pivot_longer(-Time, names_to = "Code", values_to = "recwt") %>%
dplyr::mutate(Code = gsub("\\.0", "", Code)) %>%
dplyr::filter(Time>0) %>% # this output not meaningful
dplyr::filter(Time %in% seq(365, max(Time), by=365)) %>%
dplyr::filter(Time %in% fittimes.days) %>%
dplyr::left_join(omlist_ss$funct.group_ss[, c("Code", "Name")]) %>%
dplyr::left_join(nitro) %>%
dplyr::mutate(recnums = (recwt * 50000000.0 / omlist_ss$biol$redfieldcn) / Nsum,
logrec = log(recnums/1000),
year = Time/365,
year = year-fitstartyr,
species = Name) %>%
dplyr::ungroup()
}
?SKILL
??skill
est_recruits %>%
ggplot() +
aes(x = year, y = value) +
geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Recruitment (thousands)",
title = "Time series of estimated recruitment")
est_recruits %>%
ggplot() +
aes(x = year, y = log_rec) +
geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "ln(Recruitment)",
title = "Time series of LN(Recruitment)")
recskill <- ggplot() +
geom_line(data=truerec, aes(x=year,y=recnums/1000000, color="True R"),
alpha = 10/10) +
geom_point(data=est_recruits, aes(x=year, y=value, color="Hydra Est R"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Recruitment (thousands)",
title = "Recruitment skill, Hydra estimated vs Atlantis; check units",
colour = "")
recskill <- ggplot() +
geom_line(data=truerec, aes(x=year,y=logrec, color="True R"),
alpha = 10/10) +
geom_point(data=est_recruits, aes(x=year, y=log_rec, color="Hydra Est R"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Log Recruitment",
title = "Log Recruitment skill, Hydra estimated vs Atlantis; check units",
colour = "")
# time steps per year varies by model, need to save it
# updated rep file
stepperyr <- output$Nstepsyr
if (length(stepperyr)==0) stepperyr <- nrow(output$EstBsize)/hydraDataList$Nyrs/length(hydraDataList$speciesList)
est_bio <- output$EstBsize %>%
rowSums() %>%
as.data.frame() %>%
rename(bio = ".") %>%
mutate(species = rep(hydraDataList$speciesList, each = hydraDataList$Nyrs*stepperyr),
year  = rep(1:(hydraDataList$Nyrs*stepperyr),hydraDataList$Nspecies),
year = (1-1/stepperyr) + year / stepperyr,  #5 time steps per year
log_bio = ifelse(bio>0,log(bio),NA)) %>%
I()
if(skill){
truebio <- omlist_ss$truetotbio_ss %>%
dplyr::filter(time %in% fittimes.days) %>%
dplyr::mutate(year = (time/365),
year = year-fitstartyr,
biomass = atoutput,
logbio = log(biomass)) %>%
I()
}
est_bio %>%
ggplot() +
aes(x = year, y = bio) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated biomass")
est_bio %>%
ggplot() +
aes(x = year, y = log_bio) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated LN(biomass)")
plotB <-ggplot() +
geom_line(data=truebio, aes(x=year,y=biomass, color="True B"),
alpha = 10/10) +
geom_point(data=est_bio, aes(x=year,y=bio, color="Hydra Est B"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Biomass (t)",
title = "Total biomass skill, Hydra estimated vs Atlantis",
colour="")
plotlogB <-ggplot() +
geom_line(data=truebio, aes(x=year,y=logbio, color="True log B"),
alpha = 10/10) +
geom_point(data=est_bio, aes(x=year,y=log_bio, color="Hydra Est log B"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Biomass (t)",
title = "Total biomass skill (log scale), Hydra estimated vs Atlantis",
colour="")
est_F <- output$Fyr %>%
as.data.frame() %>%
pivot_longer(cols=3:ncol(.), names_to = "year", names_prefix = "V") %>%
rename(species = "V1",
fleet = "V2") %>%
mutate(year = as.numeric(year)-2,
species = hydraDataList$speciesList[species]) %>%
I()
#est_F
#we know Atlantis F output is wrong! Do we get the pattern?
if(skill){
}
# read true object
omlist_ss <- readRDS("inputs/hydra_sim_GBself_5bin.rds")
#Number of years
nyears <- omlist_ss$runpar$nyears
total_sample <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep
# hardcode this that only Poseidon knows
# or anyone who looks at mskeyrun/data-raw/build_simdata.R
fitstart = 40
fitend = 120
#survey species inherited from omlist_ss
atlsurvspp <- omlist_ss$species_ss
# survey season and other time dimensioning parameters
# generalized timesteps all models
atlnoutsteps <- omlist_ss$runpar$tstop/omlist_ss$runpar$outputstep
atltimeall <- c(0:atlnoutsteps)
est_recruits <- output$EstRec %>%
as.data.frame() %>%
mutate(species = hydraDataList$speciesList) %>%
select(species, everything()) %>%
pivot_longer(cols = -species, names_to = "year") %>%
mutate(year = as.integer(str_remove(year, "V")),
log_rec = ifelse(value > 0,log(value),NA)) %>%
I()
if(skill){
# get true recruitment
nitro <- merge(omlist_ss$biol$kwsr, omlist_ss$biol$kwrr, by = "1")
names(nitro) <- c("Code", "KWSR", "KWRR")
nitro <- nitro %>%
dplyr::group_by(Code) %>%
dplyr::mutate(Nsum = sum(KWSR, KWRR))
truerec <- omlist_ss$YOY_ss %>%
tidyr::pivot_longer(-Time, names_to = "Code", values_to = "recwt") %>%
dplyr::mutate(Code = gsub("\\.0", "", Code)) %>%
dplyr::filter(Time>0) %>% # this output not meaningful
dplyr::filter(Time %in% seq(365, max(Time), by=365)) %>%
dplyr::filter(Time %in% fittimes.days) %>%
dplyr::left_join(omlist_ss$funct.group_ss[, c("Code", "Name")]) %>%
dplyr::left_join(nitro) %>%
dplyr::mutate(recnums = (recwt * 50000000.0 / omlist_ss$biol$redfieldcn) / Nsum,
logrec = log(recnums/1000),
year = Time/365,
year = year-fitstartyr,
species = Name) %>%
dplyr::ungroup()
}
est_recruits %>%
ggplot() +
aes(x = year, y = value) +
geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Recruitment (thousands)",
title = "Time series of estimated recruitment")
est_recruits %>%
ggplot() +
aes(x = year, y = log_rec) +
geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "ln(Recruitment)",
title = "Time series of LN(Recruitment)")
recskill <- ggplot() +
geom_line(data=truerec, aes(x=year,y=recnums/1000000, color="True R"),
alpha = 10/10) +
geom_point(data=est_recruits, aes(x=year, y=value, color="Hydra Est R"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Recruitment (thousands)",
title = "Recruitment skill, Hydra estimated vs Atlantis; check units",
colour = "")
# time steps per year varies by model, need to save it
# updated rep file
stepperyr <- output$Nstepsyr
if (length(stepperyr)==0) stepperyr <- nrow(output$EstBsize)/hydraDataList$Nyrs/length(hydraDataList$speciesList)
est_bio <- output$EstBsize %>%
rowSums() %>%
as.data.frame() %>%
rename(bio = ".") %>%
mutate(species = rep(hydraDataList$speciesList, each = hydraDataList$Nyrs*stepperyr),
year  = rep(1:(hydraDataList$Nyrs*stepperyr),hydraDataList$Nspecies),
year = (1-1/stepperyr) + year / stepperyr,  #5 time steps per year
log_bio = ifelse(bio>0,log(bio),NA)) %>%
I()
if(skill){
truebio <- omlist_ss$truetotbio_ss %>%
dplyr::filter(time %in% fittimes.days) %>%
dplyr::mutate(year = (time/365),
year = year-fitstartyr,
biomass = atoutput,
logbio = log(biomass)) %>%
I()
}
est_bio %>%
ggplot() +
aes(x = year, y = bio) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated biomass")
est_bio %>%
ggplot() +
aes(x = year, y = log_bio) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated LN(biomass)")
plotB <-ggplot() +
geom_line(data=truebio, aes(x=year,y=biomass, color="True B"),
alpha = 10/10) +
geom_point(data=est_bio, aes(x=year,y=bio, color="Hydra Est B"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Biomass (t)",
title = "Total biomass skill, Hydra estimated vs Atlantis",
colour="")
plotlogB <-ggplot() +
geom_line(data=truebio, aes(x=year,y=logbio, color="True log B"),
alpha = 10/10) +
geom_point(data=est_bio, aes(x=year,y=log_bio, color="Hydra Est log B"),
alpha = 10/10) +
theme_minimal() +
theme(legend.position = "top") +
labs(x = "Year",
y = "Biomass (t)",
title = "Total biomass skill (log scale), Hydra estimated vs Atlantis",
colour="")
est_F <- output$Fyr %>%
as.data.frame() %>%
pivot_longer(cols=3:ncol(.), names_to = "year", names_prefix = "V") %>%
rename(species = "V1",
fleet = "V2") %>%
mutate(year = as.numeric(year)-2,
species = hydraDataList$speciesList[species]) %>%
I()
#est_F
#we know Atlantis F output is wrong! Do we get the pattern?
if(skill){
}
est_F %>%
ggplot() +
aes(x = year, y = value, col = factor(fleet)) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "F",
col = "fleet",
title = "Time series of estimated fishing mortality")
nlen <- ncol(output$EstM2size)
est_M2 <- output$EstM2size %>%
as.data.frame() %>%
pivot_longer(cols=1:ncol(.), names_to = "ilen", names_prefix = "V") %>%
mutate(species = rep(hydraDataList$speciesList, each = hydraDataList$Nyrs*nlen*stepperyr),
year  = rep(rep(1:(hydraDataList$Nyrs*stepperyr),each=nlen), length(hydraDataList$speciesList)),
year = (1-1/stepperyr) + year / stepperyr) %>%
I()
est_M2 %>%
ggplot() +
aes(x = year, y = value, col = factor(ilen)) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "M2",
col = "length bin",
title = "Time series of estimated predation mortality") +
#theme(legend.position = "bottom") +
#    labs(col="") +
#    guides(col = guide_legend(nrow = 1))
NULL
survey_sel <- output$survey_sel %>%
as.data.frame() %>%
pivot_longer(cols = 3:ncol(.), names_prefix = "V", names_to = "ilen") %>%
rename(species = "V1",
survey = "V2") %>%
mutate(ilen = as.numeric(ilen) - 2,
species = hydraDataList$speciesList[species]) %>%
I()
survey_sel <- output$survey_sel %>%
as.data.frame() %>%
pivot_longer(cols = 3:ncol(.), names_prefix = "V", names_to = "ilen") %>%
rename(species = "V1",
survey = "V2") %>%
mutate(ilen = as.numeric(ilen) - 2,
species = hydraDataList$speciesList[species]) %>%
I()
survey_sel %>%
ggplot() +
aes(x=ilen, y = value, col = factor(survey)) +
geom_line() +
facet_wrap(~species) +
labs(x = "length bin",
y = "selectivity",
col = "survey") +
NULL
survey_sel <- output$fishsel %>%
as.data.frame() %>%
pivot_longer(cols = 3:ncol(.), names_prefix = "V", names_to = "ilen") %>%
rename(species = "V1",
fleet = "V2") %>%
mutate(ilen = as.numeric(ilen) - 2,
species = hydraDataList$speciesList[species]) %>%
I()
survey_sel %>%
ggplot() +
aes(x=ilen, y = value, col = factor(fleet)) +
geom_line() +
facet_wrap(~species) +
labs(x = "length bin",
y = "selectivity",
col = "fleet") +
NULL
