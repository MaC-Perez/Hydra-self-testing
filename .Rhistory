facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Recruitment (thousands)",
title = "Time series of estimated recruitment")
est_recruits %>%
ggplot() +
aes(x = year, y = log_rec) +
geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "ln(Recruitment)",
title = "Time series of LN(Recruitment)")
est_bio %>%
ggplot() +
aes(x = year, y = bio) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated biomass")
est_bio %>%
ggplot() +
aes(x = year, y = log_bio) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "Biomass (t)",
title = "Time series of estimated LN(biomass)")
est_F %>%
ggplot() +
aes(x = year, y = value, col = factor(fleet)) +
#geom_point() +
geom_line() +
facet_wrap(~species, scales = "free") +
theme_minimal() +
labs(x = "Year",
y = "F",
col = "fleet",
title = "Time series of estimated fishing mortality")
nlen <- ncol(output$EstM2size)
est_M2 <- output$EstM2size %>%
as.data.frame() %>%
pivot_longer(cols=1:ncol(.), names_to = "ilen", names_prefix = "V") %>%
mutate(species = rep(hydraDataList$speciesList, each = hydraDataList$Nyrs*nlen*stepperyr),
year  = rep(rep(1:(hydraDataList$Nyrs*stepperyr),each=nlen), length(hydraDataList$speciesList)),
year = (1-1/stepperyr) + year / stepperyr) %>%
I()
#plotdir <- "outputs/figures/diet/"
predicted<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$pred_value, temp.diet$prey))
colnames(predicted) <- c('number','year','species','lenbin', 'prop', 'prey')
predicted$type2<-"e" #rep(("e"),each=22810)
predicted$sizefit<- paste0(predicted$lenbin,".",predicted$type2)
observed<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$obs_value, temp.diet$prey))
colnames(observed) <- c('number','year','species','lenbin', 'prop', 'prey')
observed$type2<-"o" #rep(("o"),each=22810)
observed$sizefit<- paste0(observed$lenbin,".",observed$type2)
pred_obs <- bind_rows(predicted, observed)# %>%
#mutate(sizefit = paste0(lenbin,".",type2))
# similar to above for survey length comps, adjust to do for all surveys
# possibly a function that takes filtered data by species, survey as an argument
### species = 1
sp<-1
nsize <- hydraDataList$Nsizebins
stringbit <- paste0(rep(1:nsize, each=2),c(".o",".e"))
limits_use <- rep("",3*nsize)
breaks_use <- rep(NA,3*nsize)
for (i in 1:nsize) {
lo <- i*3-2
hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 1) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
breaks = breaks_use,
labels = limits_use) +
coord_flip() +
facet_wrap(~year, dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
sp<-1
nsize <- hydraDataList$Nsizebins
stringbit <- paste0(rep(1:nsize, each=2),c(".o",".e"))
limits_use <- rep("",3*nsize)
breaks_use <- rep(NA,3*nsize)
for (i in 1:nsize) {
lo <- i*3-2
hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
if(dim(pred_obs %>%
tibble() %>%
filter(species == sp & number == 2))[1] > 0) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 2) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
breaks = breaks_use,
labels = limits_use) +
coord_flip() +
facet_wrap(~as.numeric(year), dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
}
if(dim(pred_obs %>%
tibble() %>%
filter(species == sp & number == 2))[1] == 0) plot_diet[[sp]] <- NULL
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
for (sp in especies){
tmp <- plot_diet[[sp]]
cat("######", sp, " \n")
print(tmp)
cat(" \n\n")
}
View(pred_obs)
#catch_obs <- hydraDataList$observedCatch %>%
catch_obspred <- indexfits[2][[1]] %>%
mutate(obs = catch + 1e-07,
pred = pred_catch + 1e-07,
log_obs = log(obs),
log_pred = log(pred),
log_lo = log_obs - 1.96*cv,
log_hi = log_obs + 1.96*cv,
obs_lo = exp(log_lo),
obs_hi = exp(log_hi),
species = hydraDataList$speciesList[species])
View(catch_obspred)
obs_catch <- hydraDataList$observedCatchSize %>% tibble()
obs_catch<-obs_catch %>% pivot_longer(cols=7:ncol(.), names_to = "lenbin") %>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("catch",nrow(.)),
species = hydraDataList$speciesList[species])# %>% filter(value != -999)
obs_catch$value[which(obs_catch$value == -999)] = 0.00001
pred_catch<-output$pred_catch_size
obs_catch$pred_catch<-pred_catch
nll_catch<-output$nll_catch_size
obs_catch$nll_catch<-nll_catch
obs_catch$pearson<-((obs_catch$value-obs_catch$pred_catch)/sqrt(obs_catch$pred_catch))
colnames(obs_catch) <- c('number','area','year','species','type','InpN','lenbin','obs_value','label',
'pred_value','nll','pearson')
diet_catch <- bind_rows(obs_catch, obs_survey)
View(obs_catch)
View(obs_catch)
#plotdir <- "outputs/figures/diet/"
predicted<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$pred_value, temp.diet$prey))
colnames(predicted) <- c('number','year','species','lenbin', 'prop', 'prey')
predicted$type2<-"e" #rep(("e"),each=22810)
predicted$sizefit<- paste0(predicted$lenbin,".",predicted$type2)
observed<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$obs_value, temp.diet$prey))
colnames(observed) <- c('number','year','species','lenbin', 'prop', 'prey')
observed$type2<-"o" #rep(("o"),each=22810)
observed$sizefit<- paste0(observed$lenbin,".",observed$type2)
pred_obs <- bind_rows(predicted, observed)# %>%
#mutate(sizefit = paste0(lenbin,".",type2))
# similar to above for survey length comps, adjust to do for all surveys
# possibly a function that takes filtered data by species, survey as an argument
### species = 1
sp<-1
nsize <- hydraDataList$Nsizebins
stringbit <- paste0(rep(1:nsize, each=2),c(".o",".e"))
limits_use <- rep("",3*nsize)
breaks_use <- rep(NA,3*nsize)
for (i in 1:nsize) {
lo <- i*3-2
hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 1) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
breaks = breaks_use,
labels = limits_use) +
coord_flip() +
facet_wrap(~year, dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
for (sp in especies){
tmp <- plot_diet[[sp]]
cat("######", sp, " \n")
print(tmp)
cat(" \n\n")
}
knitr::opts_chunk$set(echo = TRUE)
#TMB:::install.contrib("https://github.com/vtrijoulet/OSA_multivariate_dists/archive/main.zip")
#devtools::install_github("fishfollower/compResidual/compResidual")
library(tidyverse)
library(compResidual)
source("R/read.report.R")
source("R/gettables.R")
#datafile object
repfile <- "inputs/hydra_sim.rep"
hydraDataList <- readRDS("inputs/hydra_sim_GBself_5bin.rds")
output<-reptoRlist(repfile)
obs_surveyB <- hydraDataList$observedBiomass
obs_catchB <- hydraDataList$observedCatch
biorows <- dim(obs_surveyB)[1]
catchrows <- dim(obs_catchB)[1]
#
indexfits <- gettables(repfile, biorows, catchrows)
survey_obspred <- indexfits[1][[1]] %>%
mutate(obs = biomass + 1e-07,
pred = pred_bio + 1e-07,
log_obs = log(obs),
log_pred = log(pred),
log_lo = log_obs - 1.96*cv,
log_hi = log_obs + 1.96*cv,
obs_lo = exp(log_lo),
obs_hi = exp(log_hi),
species = hydraDataList$speciesList[species])
for (surv in unique(survey_obspred$survey)) {
cat("##### Survey #", surv, " \n")
p1 <- survey_obspred %>%
filter(survey == surv) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col=factor(survey)) +
geom_errorbar(aes(ymin = log_lo, ymax = log_hi)) +
geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p1)
cat(" \n\n")
}
#catch_obs <- hydraDataList$observedCatch %>%
catch_obspred <- indexfits[2][[1]] %>%
mutate(obs = catch + 1e-07,
pred = pred_catch + 1e-07,
log_obs = log(obs),
log_pred = log(pred),
log_lo = log_obs - 1.96*cv,
log_hi = log_obs + 1.96*cv,
obs_lo = exp(log_lo),
obs_hi = exp(log_hi),
species = hydraDataList$speciesList[species])
for (fleet in unique(catch_obspred$fishery)) {
cat("##### Fleet #", fleet, " \n")
p3 <- catch_obspred %>%
filter(fishery == fleet,
catch > 0) %>%
ggplot() +
aes(x= year, y = log_obs, group = species, col= factor(fishery)) +
geom_errorbar(aes(ymin = log_lo, ymax = log_hi)) +
geom_point() +
geom_line(aes(x=year, y=log_pred), col = "blue") +
facet_wrap(~species, scales = "free_y") +
theme_bw() +
guides(species = "None")
print(p3)
cat(" \n\n")
}
obs_survey <- hydraDataList$observedSurvSize %>% tibble()
obs_survey <- obs_survey %>% pivot_longer(cols=6:ncol(.), names_to = "lenbin") %>% #filter(value != -999)%>%
mutate(lenbin = as.integer(str_remove(lenbin, "sizebin")),
label = rep("survey",nrow(.)),
species = hydraDataList$speciesList[species])
obs_survey$value[which(obs_survey$value == -999)] = 0.00001
pred_surv<-output$pred_survey_size
obs_survey$pred_surv<-pred_surv
nll_survey<-output$nll_survey_size
obs_survey$nll_surv<-nll_survey
obs_survey$pearson<-((obs_survey$value-obs_survey$pred_surv)/sqrt(obs_survey$pred_surv))
colnames(obs_survey) <- c('number','year','species','type','InpN','lenbin','obs_value','label',
'pred_value','nll','pearson')
# need to separate out surveys to run this, inpN differs by survey as does n lenbins with data
# a hack
temp.surv.all <- temp.surv
temp.surv <- temp.surv %>% dplyr::filter(number ==2)
temporal2 = numeric()
especie = numeric(); especie = sort(unique(temp.surv$species)) # especies
for(e in 1:length(especie)){
pos1 = numeric(); pos1 = which(temp.surv$species == especie[e])
temporal1 = numeric()
year = numeric(); year = sort(unique(temp.surv$year[pos1])) # ano
for(y in 1:length(year)){
pos2 = numeric(); pos2 = which(temp.surv$year[pos1] == year[y])
N = numeric(); N = unique(temp.surv$InpN[pos1][pos2]) # sample size para el estrato especie ano
n_ejemplares_obs = numeric(); n_ejemplares_obs = round(N * temp.surv$obs_value[pos1][pos2] , 0) # crea vector de proporcion por el sample size
n_ejemplares_est = numeric(); n_ejemplares_est = round(N * temp.surv$pred_value[pos1][pos2], 0)
tt1 = numeric()
tt1 = data.frame(YEAR = year[y], BIN = temp.surv$lenbin[pos1][pos2], N = N, N_EJEM_OBS = n_ejemplares_obs, N_EJEM_EST = n_ejemplares_est)
temporal1 = rbind(temporal1, tt1) # guarda la proporcion * sample size para la especie seleccionada y ano
}
bin1_obs = numeric(); bin1_obs = sum(temporal1$N_EJEM_OBS[which(temporal1$BIN == 1)])
bin2_obs = numeric(); bin2_obs = sum(temporal1$N_EJEM_OBS[which(temporal1$BIN == 2)])
bin3_obs = numeric(); bin3_obs = sum(temporal1$N_EJEM_OBS[which(temporal1$BIN == 3)])
bin4_obs = numeric(); bin4_obs = sum(temporal1$N_EJEM_OBS[which(temporal1$BIN == 4)])
bin5_obs = numeric(); bin5_obs = sum(temporal1$N_EJEM_OBS[which(temporal1$BIN == 5)])
total_obs = sum(bin1_obs, bin2_obs, bin3_obs, bin4_obs, bin5_obs)
prop_new_obs = numeric(); prop_new_obs = c(bin1_obs, bin2_obs, bin3_obs, bin4_obs, bin5_obs) / total_obs
bin1_pred = numeric(); bin1_pred = sum(temporal1$N_EJEM_EST[which(temporal1$BIN == 1)])
bin2_pred = numeric(); bin2_pred = sum(temporal1$N_EJEM_EST[which(temporal1$BIN == 2)])
bin3_pred = numeric(); bin3_pred = sum(temporal1$N_EJEM_EST[which(temporal1$BIN == 3)])
bin4_pred = numeric(); bin4_pred = sum(temporal1$N_EJEM_EST[which(temporal1$BIN == 4)])
bin5_pred = numeric(); bin5_pred = sum(temporal1$N_EJEM_EST[which(temporal1$BIN == 5)])
total_pred = sum(bin1_pred, bin2_pred, bin3_pred, bin4_pred, bin5_pred)
prop_new_est = numeric(); prop_new_est = c(bin1_pred, bin2_pred, bin3_pred, bin4_pred, bin5_pred) / total_pred
tt2 = numeric()
tt2 = data.frame(ESPECIE = especie[e], BIN = seq(1, 5, 1), PROP_OBS = prop_new_obs, PROP_EST = prop_new_est)
temporal2 = rbind(temporal2, tt2) # almacena por cada especie
}
long_temp2 <- temporal2 %>%
pivot_longer(cols = c("PROP_OBS","PROP_EST"),
names_to = c("kind","junk"),names_sep = " ") %>%
select(-junk) %>%
mutate(kind = ifelse(kind=="PROP_EST","PROP_PRED",kind))
complot_year<- long_temp2 %>%
ggplot() +
aes(x = BIN, y = value) +
geom_line(aes(col=kind)) +
theme(title = element_text(angle = 0, hjust = 0.5, size=15, colour="black")) +
labs(x="length bin", y="proportion value", title="Length composition aggregated by year survey data") +
facet_wrap(.~ESPECIE) +
theme(legend.position = "bottom") +
labs(col="") +
guides(col = guide_legend(nrow = 1))
#ggsave(paste0(plotdir,"complot_year_survey.jpeg"), complot_year)#, width=3000, height=2500, res=250)
temp.surv <- temp.surv.all
print(complot_year)
#plotdir <- "outputs/figures/diet/"
predicted<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$pred_value, temp.diet$prey))
colnames(predicted) <- c('number','year','species','lenbin', 'prop', 'prey')
predicted$type2<-"e" #rep(("e"),each=22810)
predicted$sizefit<- paste0(predicted$lenbin,".",predicted$type2)
observed<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$obs_value, temp.diet$prey))
colnames(observed) <- c('number','year','species','lenbin', 'prop', 'prey')
observed$type2<-"o" #rep(("o"),each=22810)
observed$sizefit<- paste0(observed$lenbin,".",observed$type2)
pred_obs <- bind_rows(predicted, observed)# %>%
#mutate(sizefit = paste0(lenbin,".",type2))
# similar to above for survey length comps, adjust to do for all surveys
# possibly a function that takes filtered data by species, survey as an argument
### species = 1
sp<-1
nsize <- hydraDataList$Nsizebins
stringbit <- paste0(rep(1:nsize, each=2),c(".o",".e"))
limits_use <- rep("",3*nsize)
breaks_use <- rep(NA,3*nsize)
for (i in 1:nsize) {
lo <- i*3-2
hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 1) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
breaks = breaks_use,
labels = limits_use) +
coord_flip() +
facet_wrap(~year, dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
dietsample <- temp.diet %>%
tibble() %>%
mutate(effN_a = pred_value/(1.-pred_value),
effN_b = (obs_value-pred_value)^2) %>%
group_by(number, year, species, lenbin) %>%
summarize(InpN = mean(InpN),
effN = sum(effN_a)/sum(effN_b),
.groups = "drop") %>%
I()
#dietsample
for (sp in especies){
tmp <- plot_diet[[sp]]
cat("######", sp, " \n")
print(tmp)
cat(" \n\n")
}
#plotdir <- "outputs/figures/diet/"
predicted<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$pred_value, temp.diet$prey))
colnames(predicted) <- c('number','year','species','lenbin', 'prop', 'prey')
predicted$type2<-"e" #rep(("e"),each=22810)
predicted$sizefit<- paste0(predicted$lenbin,".",predicted$type2)
observed<- as.data.frame(cbind(temp.diet$number, temp.diet$year, temp.diet$species,
temp.diet$lenbin, temp.diet$obs_value, temp.diet$prey))
colnames(observed) <- c('number','year','species','lenbin', 'prop', 'prey')
observed$type2<-"o" #rep(("o"),each=22810)
observed$sizefit<- paste0(observed$lenbin,".",observed$type2)
pred_obs <- bind_rows(predicted, observed)# %>%
#mutate(sizefit = paste0(lenbin,".",type2))
# similar to above for survey length comps, adjust to do for all surveys
# possibly a function that takes filtered data by species, survey as an argument
### species = 1
sp<-1
nsize <- hydraDataList$Nsizebins
stringbit <- paste0(rep(1:nsize, each=2),c(".o",".e"))
limits_use <- rep("",3*nsize)
breaks_use <- rep(NA,3*nsize)
for (i in 1:nsize) {
lo <- i*3-2
hi <- i*3-1
limits_use[lo:hi] <- paste0(rep(i, 2),c(".o",".e"))
breaks_use[lo:hi] <- limits_use[lo:hi]
}
especies<-unique(pred_obs$species)
plot_diet <- NULL
for (sp in especies) {
plot_diet[[sp]] <-  pred_obs %>%
tibble() %>%
filter(species == sp & number == 1) %>%
mutate(prop = as.numeric(prop),
year = as.numeric(year)) %>%
ggplot(aes(x = sizefit, y = prop, group = type2, fill = prey)) +
geom_col(position = "fill") +
scale_x_discrete(limits = limits_use,
# c("1.o","1.e","",
#            "2.o","2.e","",
#            "3.o","3.e","",
#            "4.o","4.e","",
#            "5.o","5.e",""),
breaks = breaks_use, #c("1.o","1.e",NA,
# "2.o","2.e",NA,
# "3.o","3.e",NA,
# "4.o","4.e",NA,
# "5.o","5.e",NA),
labels = limits_use) + #c("1.o","1.e","",
# "2.o","2.e","",
# "3.o","3.e","",
# "4.o","4.e","",
# "5.o","5.e","")) +
coord_flip() +
facet_wrap(~year, dir="v") +
theme_bw() +
labs(x = "size & source (o=observed, e=expected)",
fill = "prey",
y = "proportion in diet") +
scale_fill_brewer(type = "qual", palette = 3)
# facet_wrap_paginate(~ , ncol = 4, nrow = 5, page = 4)
#ggsave(paste0(plotdir,"diet_plot_",sp,".jpeg"), plot_diet, width = 10, height = 9, dpi = 300)#, width=3000, height=2500, res=250)
}
for (sp in especies){
tmp <- plot_diet[[sp]]
cat("######", sp, " \n")
print(tmp)
cat(" \n\n")
}
for (sp in especies) {
tmp <- plot_osa[[sp]]
cat("######", sp, " \n")
plot(tmp)
cat(" \n\n")
}
View(hydraDataList)
hydraDataList[["predOrPrey"]]
